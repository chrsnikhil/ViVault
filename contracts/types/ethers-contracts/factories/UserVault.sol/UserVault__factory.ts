/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from 'ethers';
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from 'ethers';
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from 'ethers';
import type { NonPayableOverrides } from '../../common.js';
import type { UserVault, UserVaultInterface } from '../../UserVault.sol/UserVault.js';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_owner',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_factory',
        type: 'address',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'owner',
        type: 'address',
      },
    ],
    name: 'OwnableInvalidOwner',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
    ],
    name: 'OwnableUnauthorizedAccount',
    type: 'error',
  },
  {
    inputs: [],
    name: 'ReentrancyGuardReentrantCall',
    type: 'error',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'SafeERC20FailedOperation',
    type: 'error',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'previousOwner',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'OwnershipTransferred',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'TokenAdded',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'TokenRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'from',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'TokensReceived',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'timestamp',
        type: 'uint256',
      },
    ],
    name: 'TokensWithdrawn',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'getBalance',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
    ],
    name: 'getBalances',
    outputs: [
      {
        internalType: 'uint256[]',
        name: '',
        type: 'uint256[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSupportedTokenCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getSupportedTokens',
    outputs: [
      {
        internalType: 'address[]',
        name: '',
        type: 'address[]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getVaultInfo',
    outputs: [
      {
        internalType: 'address',
        name: 'ownerAddress',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'factoryAddress',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'tokenCount',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'totalValue',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'isTokenSupported',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'owner',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address[]',
        name: 'tokens',
        type: 'address[]',
      },
    ],
    name: 'registerExistingTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'removeToken',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'renounceOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'supportedTokens',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address',
      },
    ],
    name: 'tokenBalances',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'newOwner',
        type: 'address',
      },
    ],
    name: 'transferOwnership',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
    ],
    name: 'withdrawAll',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'token',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address',
      },
    ],
    name: 'withdrawTo',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    stateMutability: 'payable',
    type: 'receive',
  },
] as const;

const _bytecode =
  '0x60a060405234801561000f575f5ffd5b5060405161174538038061174583398101604081905261002e916100e6565b816001600160a01b03811661005c57604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6100658161007c565b50600180556001600160a01b031660805250610117565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100e1575f5ffd5b919050565b5f5f604083850312156100f7575f5ffd5b610100836100cb565b915061010e602084016100cb565b90509250929050565b60805161160f6101365f395f81816102930152610a71015261160f5ff3fe608060405260043610610108575f3560e01c8063c4e2c1e611610092578063d3c7c2c711610062578063d3c7c2c714610326578063f2fde38b14610347578063f3fef3a314610366578063f8b2cb4f14610385578063fa09e630146103a4575f5ffd5b8063c4e2c1e6146102b5578063c6255626146102d4578063ce67be26146102f3578063d103d0f814610307575f5ffd5b8063715018a6116100d8578063715018a6146101c157806375151b63146101d55780637f98aa71146102135780638da5cb5b14610252578063c45a015514610282575f5ffd5b80632d2ae1c11461011357806347e7ef2414610148578063523fba7f146101695780635fa7b584146101a2575f5ffd5b3661010f57005b5f5ffd5b34801561011e575f5ffd5b5061013261012d3660046112e4565b6103c3565b60405161013f9190611355565b60405180910390f35b348015610153575f5ffd5b506101676101623660046113b2565b6104d3565b005b348015610174575f5ffd5b506101946101833660046113da565b60026020525f908152604090205481565b60405190815260200161013f565b3480156101ad575f5ffd5b506101676101bc3660046113da565b610807565b3480156101cc575f5ffd5b50610167610a42565b3480156101e0575f5ffd5b506102036101ef3660046113da565b60046020525f908152604090205460ff1681565b604051901515815260200161013f565b34801561021e575f5ffd5b50610227610a55565b604080516001600160a01b03958616815294909316602085015291830152606082015260800161013f565b34801561025d575f5ffd5b505f546001600160a01b03165b6040516001600160a01b03909116815260200161013f565b34801561028d575f5ffd5b5061026a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102c0575f5ffd5b506101676102cf3660046113fa565b610a9c565b3480156102df575f5ffd5b5061026a6102ee366004611433565b610c21565b3480156102fe575f5ffd5b50600354610194565b348015610312575f5ffd5b506101676103213660046112e4565b610c49565b348015610331575f5ffd5b5061033a610dd9565b60405161013f919061144a565b348015610352575f5ffd5b506101676103613660046113da565b610e39565b348015610371575f5ffd5b506101676103803660046113b2565b610e76565b348015610390575f5ffd5b5061019461039f3660046113da565b610fa0565b3480156103af575f5ffd5b506101676103be3660046113da565b611008565b60605f8267ffffffffffffffff8111156103df576103df61148a565b604051908082528060200260200182016040528015610408578160200160208202803683370190505b5090505f5b838110156104c9578484828181106104275761042761149e565b905060200201602081019061043c91906113da565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610480573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104a491906114b2565b8282815181106104b6576104b661149e565b602090810291909101015260010161040d565b5090505b92915050565b6104db611135565b6001600160a01b03821661050a5760405162461bcd60e51b8152600401610501906114c9565b60405180910390fd5b5f81116105295760405162461bcd60e51b8152600401610501906114fe565b6040516370a0823160e01b8152336004820152829082906001600160a01b038316906370a0823190602401602060405180830381865afa15801561056f573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061059391906114b2565b10156105ef5760405162461bcd60e51b815260206004820152602560248201527f557365725661756c743a20496e73756666696369656e7420746f6b656e2062616044820152646c616e636560d81b6064820152608401610501565b604051636eb1769f60e11b815233600482015230602482015282906001600160a01b0383169063dd62ed3e90604401602060405180830381865afa158015610639573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065d91906114b2565b10156106bb5760405162461bcd60e51b815260206004820152602760248201527f557365725661756c743a20496e73756666696369656e7420746f6b656e20616c6044820152666c6f77616e636560c81b6064820152608401610501565b6106d06001600160a01b03821633308561115f565b6001600160a01b0383165f90815260026020526040812080548492906106f790849061155a565b90915550506001600160a01b0383165f9081526004602052604090205460ff166107b4576003805460018082019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0386169081179091555f81815260046020908152604091829020805460ff19169094179093555142815290917ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c910160405180910390a25b6040805183815242602082015233916001600160a01b038616917f09c19ec084a7a17a7a092a89fb51a7662c32b435253ca1ce77010a4068336215910160405180910390a35061080360018055565b5050565b61080f6111cc565b6001600160a01b0381165f9081526004602052604090205460ff166108765760405162461bcd60e51b815260206004820152601e60248201527f557365725661756c743a20546f6b656e206e6f7420737570706f7274656400006044820152606401610501565b6001600160a01b0381165f90815260026020526040902054156108ef5760405162461bcd60e51b815260206004820152602b60248201527f557365725661756c743a2043616e6e6f742072656d6f766520746f6b656e207760448201526a6974682062616c616e636560a81b6064820152608401610501565b5f5b6003548110156109e557816001600160a01b0316600382815481106109185761091861149e565b5f918252602090912001546001600160a01b0316036109dd57600380546109419060019061156d565b815481106109515761095161149e565b5f91825260209091200154600380546001600160a01b03909216918390811061097c5761097c61149e565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555060038054806109b8576109b8611580565b5f8281526020902081015f1990810180546001600160a01b03191690550190556109e5565b6001016108f1565b506001600160a01b0381165f8181526004602052604090819020805460ff19169055517fbe9bb4bdca0a094babd75e3a98b1d2e2390633430d0a2f6e2b9970e2ee03fb2e90610a379042815260200190565b60405180910390a250565b610a4a6111cc565b610a535f6111f8565b565b5f5f5f5f610a6a5f546001600160a01b031690565b60035490957f000000000000000000000000000000000000000000000000000000000000000095509093505f92509050565b610aa46111cc565b610aac611135565b6001600160a01b038316610ad25760405162461bcd60e51b8152600401610501906114c9565b5f8211610af15760405162461bcd60e51b8152600401610501906114fe565b6001600160a01b038116610b535760405162461bcd60e51b8152602060048201526024808201527f557365725661756c743a20496e76616c696420726563697069656e74206164646044820152637265737360e01b6064820152608401610501565b6001600160a01b0383165f90815260026020526040902054821115610b8a5760405162461bcd60e51b815260040161050190611594565b6001600160a01b0383165f9081526002602052604081208054849290610bb190849061156d565b90915550610bcb90506001600160a01b0384168284611247565b604080518381524260208201526001600160a01b0380841692908616917fa1b8b675e45a4aa34f25af53b8f232c9ef44017db83cc0df5a914dbe54ed46cb910160405180910390a3610c1c60018055565b505050565b60038181548110610c30575f80fd5b5f918252602090912001546001600160a01b0316905081565b610c516111cc565b5f5b81811015610c1c575f838383818110610c6e57610c6e61149e565b9050602002016020810190610c8391906113da565b90506001600160a01b03811615801590610cb557506001600160a01b0381165f9081526004602052604090205460ff16155b15610dd0576040516370a0823160e01b81523060048201525f906001600160a01b038316906370a0823190602401602060405180830381865afa158015610cfe573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d2291906114b2565b90508015610dce576003805460018082019092557fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0180546001600160a01b0319166001600160a01b0385169081179091555f818152600460209081526040808320805460ff19169095179094556002815290839020849055915142815290917ff4c563a3ea86ff1f4275e8c207df0375a51963f2b831b7bf4da8be938d92876c910160405180910390a25b505b50600101610c53565b60606003805480602002602001604051908101604052809291908181526020018280548015610e2f57602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610e11575b5050505050905090565b610e416111cc565b6001600160a01b038116610e6a57604051631e4fbdf760e01b81525f6004820152602401610501565b610e73816111f8565b50565b610e7e6111cc565b610e86611135565b6001600160a01b038216610eac5760405162461bcd60e51b8152600401610501906114c9565b5f8111610ecb5760405162461bcd60e51b8152600401610501906114fe565b6001600160a01b0382165f90815260026020526040902054811115610f025760405162461bcd60e51b815260040161050190611594565b6001600160a01b0382165f9081526002602052604081208054839290610f2990849061156d565b90915550505f54610f4f906001600160a01b03165b6001600160a01b0384169083611247565b5f546040805183815242602082015281516001600160a01b03938416938616927fa1b8b675e45a4aa34f25af53b8f232c9ef44017db83cc0df5a914dbe54ed46cb928290030190a361080360018055565b6040516370a0823160e01b81523060048201525f906001600160a01b038316906370a0823190602401602060405180830381865afa158015610fe4573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104cd91906114b2565b6110106111cc565b611018611135565b6001600160a01b03811661103e5760405162461bcd60e51b8152600401610501906114c9565b6001600160a01b0381165f90815260026020526040902054806110a35760405162461bcd60e51b815260206004820181905260248201527f557365725661756c743a204e6f20746f6b656e7320746f2077697468647261776044820152606401610501565b6001600160a01b0382165f90815260026020526040812080548392906110ca90849061156d565b90915550505f546110e3906001600160a01b0316610f3e565b5f546040805183815242602082015281516001600160a01b03938416938616927fa1b8b675e45a4aa34f25af53b8f232c9ef44017db83cc0df5a914dbe54ed46cb928290030190a350610e7360018055565b60026001540361115857604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b6040516001600160a01b0384811660248301528381166044830152606482018390526111c69186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611278565b50505050565b5f546001600160a01b03163314610a535760405163118cdaa760e01b8152336004820152602401610501565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b03838116602483015260448201839052610c1c91859182169063a9059cbb90606401611194565b5f5f60205f8451602086015f885af180611297576040513d5f823e3d81fd5b50505f513d915081156112ae5780600114156112bb565b6001600160a01b0384163b155b156111c657604051635274afe760e01b81526001600160a01b0385166004820152602401610501565b5f5f602083850312156112f5575f5ffd5b823567ffffffffffffffff81111561130b575f5ffd5b8301601f8101851361131b575f5ffd5b803567ffffffffffffffff811115611331575f5ffd5b8560208260051b8401011115611345575f5ffd5b6020919091019590945092505050565b602080825282518282018190525f918401906040840190835b8181101561138c57835183526020938401939092019160010161136e565b509095945050505050565b80356001600160a01b03811681146113ad575f5ffd5b919050565b5f5f604083850312156113c3575f5ffd5b6113cc83611397565b946020939093013593505050565b5f602082840312156113ea575f5ffd5b6113f382611397565b9392505050565b5f5f5f6060848603121561140c575f5ffd5b61141584611397565b92506020840135915061142a60408501611397565b90509250925092565b5f60208284031215611443575f5ffd5b5035919050565b602080825282518282018190525f918401906040840190835b8181101561138c5783516001600160a01b0316835260209384019390920191600101611463565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f602082840312156114c2575f5ffd5b5051919050565b6020808252818101527f557365725661756c743a20496e76616c696420746f6b656e2061646472657373604082015260600190565b60208082526028908201527f557365725661756c743a20416d6f756e74206d75737420626520677265617465604082015267072207468616e20360c41b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b808201808211156104cd576104cd611546565b818103818111156104cd576104cd611546565b634e487b7160e01b5f52603160045260245ffd5b60208082526025908201527f557365725661756c743a20496e73756666696369656e74207661756c742062616040820152646c616e636560d81b60608201526080019056fea2646970667358221220c0372fa2ff3911221adde88bb35a3632c5def624373f8a4fcac2dd3175b0912864736f6c634300081c0033';

type UserVaultConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserVault__factory extends ContractFactory {
  constructor(...args: UserVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _factory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, _factory, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    _factory: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, _factory, overrides || {}) as Promise<
      UserVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UserVault__factory {
    return super.connect(runner) as UserVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserVaultInterface {
    return new Interface(_abi) as UserVaultInterface;
  }

  override attach(address: string | Addressable): UserVault {
    return super.attach(address) as UserVault;
  }
  static connect(address: string, runner?: ContractRunner | null): UserVault {
    return new Contract(address, _abi, runner) as unknown as UserVault;
  }
}
